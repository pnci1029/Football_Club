name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: fe/yarn.lock
        
    - name: Create application-prod.yml with secrets
      run: echo "${{ secrets.APPLICATION_PROD_YML }}" > be/src/main/resources/application-prod.yml
      
    - name: Build Backend
      run: |
        cd be
        chmod +x gradlew
        ./gradlew clean build -x test
        
    - name: Build Frontend
      run: |
        cd fe
        yarn install --frozen-lockfile
        yarn build
        
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp be/build/libs/*.jar deploy/app.jar
        cp -r fe/build deploy/frontend
        cp scripts/deploy.sh deploy/
        chmod +x deploy/deploy.sh
        tar -czf deploy.tar.gz deploy/
        
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: "deploy.tar.gz"
        target: "/home/${{ secrets.EC2_USERNAME }}"
        
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USERNAME }}
          tar -xzf deploy.tar.gz
          cd deploy
          ./deploy.sh